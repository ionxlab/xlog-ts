{"version":3,"file":"xlog.js","mappings":"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","sources":["webpack://XLog/webpack/universalModuleDefinition","webpack://XLog/./src/LogConfig.ts","webpack://XLog/./src/LogLevel.ts","webpack://XLog/./src/LogManager.ts","webpack://XLog/./src/Logger.ts","webpack://XLog/webpack/bootstrap","webpack://XLog/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"XLog\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"XLog\"] = factory();\n\telse\n\t\troot[\"XLog\"] = factory();\n})(this, function() {\nreturn ","/**\r\n * The LogConfig class\r\n */\r\nexport class LogConfig {\r\n  public printDate: boolean = true\r\n  public printTime: boolean = true\r\n  public printMilliTime: boolean = true\r\n  public printName: boolean = true\r\n  public printLevel: boolean = true\r\n  public printTag: boolean = true\r\n\r\n  /**\r\n   * Construct a LogConfig\r\n   * @param {boolean} printDate\r\n   * @param {boolean} printTime\r\n   * @param {boolean} printMilliTime\r\n   * @param {boolean} printName\r\n   * @param {boolean} printLevel\r\n   * @param {boolean} printTag\r\n   */\r\n  constructor(printDate?: boolean, printTime?: boolean, printMilliTime?: boolean, printName?: boolean, printLevel?: boolean, printTag?: boolean) {\r\n    if(printDate != null)\r\n      this.printDate = printDate;\r\n    if(printTime != null)\r\n      this.printTime = printTime;\r\n    if(printMilliTime != null)\r\n      this.printMilliTime = printMilliTime;\r\n    if(printName != null)\r\n      this.printName = printName;\r\n    if(printLevel != null)\r\n      this.printLevel = printLevel;\r\n    if(printTag != null)\r\n      this.printTag = printTag;\r\n  }\r\n}\r\n","/**\r\n * Enum for logger levels\r\n * @enum {number}\r\n */\r\nexport enum LogLevel {\r\n  MESSAGE,\r\n  ERROR,\r\n  WARNING,\r\n  INFO,\r\n  DEBUG,\r\n  VERBOSE\r\n}","import { LogLevel } from './LogLevel'\r\nimport { LogConfig } from './LogConfig'\r\nimport { Logger } from './Logger'\r\n\r\n/**\r\n * The LogManager class\r\n * Manage logger instances\r\n */\r\nexport class LogManager {\r\n  private name: string = null;\r\n  private config: LogConfig = new LogConfig();\r\n  private level: LogLevel = LogLevel.VERBOSE;\r\n  private loggers: Map<string, Logger> = new Map<string, Logger>();\r\n  private static instance: LogManager = null;\r\n\r\n  /**\r\n   * Construct a LogManager\r\n   * @param {string} name\r\n   * @param {LogLevel} level\r\n   * @param {LogConfig} config\r\n   */\r\n  constructor(name?: string, level?: LogLevel, config?: LogConfig) {\r\n    if(name != null)\r\n      this.name = name;\r\n    if(level != null)\r\n      this.level = level;\r\n    if(config != null)\r\n      this.config = config;\r\n  }\r\n\r\n  /**\r\n   * Get the singleton instance of a LogManager\r\n   * @param {string} name\r\n   * @param {LogLevel} level\r\n   * @param {LogConfig} config\r\n   * @param {boolean} override\r\n   * @return {LogManager}\r\n   */\r\n  static getInstance(name?: string, level?: LogLevel, config?: LogConfig, override?: boolean): LogManager {\r\n    if(LogManager.instance===null || override) {\r\n      LogManager.instance = new LogManager(name, level, config);\r\n    }\r\n    return LogManager.instance;\r\n  }\r\n\r\n  /**\r\n   * Return an instance of Logger\r\n   * @param {string} tag\r\n   * @param {LogLevel} level\r\n   * @param {boolean} override\r\n   * @return {Logger}\r\n   */\r\n  getLogger(tag: string, level?: LogLevel, override?: boolean): Logger {\r\n    if(!this.loggers.has(tag) || override)\r\n      this.loggers.set(tag, new Logger(this.name, tag, (level!==null ? level : this.level), this.config));\r\n\r\n    return this.loggers.get(tag);\r\n  };\r\n\r\n  /**\r\n   * Set log level\r\n   * @param {LogLevel} level - the log level\r\n   */\r\n  setLevel(level: LogLevel): void {\r\n    this.level = level;\r\n    Object.keys(this.loggers).forEach((key) => {\r\n      if(this.loggers[key])\r\n        this.loggers[key].setLevel(level);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Remove an instance of Logger\r\n   * @param {string} tag\r\n   */\r\n  removeLogger(tag: string): void {\r\n    this.loggers.delete(tag);\r\n  };\r\n\r\n  /**\r\n   * Remove all instances of Logger\r\n   */\r\n  removeLoggers(): void {\r\n    this.loggers.clear();\r\n  };\r\n}","import {LogLevel} from './LogLevel'\r\nimport {LogConfig} from './LogConfig'\r\n\r\n/**\r\n * The Logger class\r\n */\r\nexport class Logger {\r\n  private name: string = null;\r\n  private tag: string = null;\r\n  private config: LogConfig = new LogConfig();\r\n  private level: LogLevel = LogLevel.VERBOSE;\r\n  private static readonly consoles: string[] = [\"log\",\"error\",\"warn\",\"info\",\"debug\",\"debug\"];\r\n  private static readonly levels: string[] = ['m','e','w','i','d','v'];\r\n\r\n  /**\r\n   * Construct a Logger\r\n   * @param {string} name\r\n   * @param {string} tag\r\n   * @param {LogLevel} level\r\n   * @param {LogConfig} config\r\n   */\r\n  constructor(name?: string, tag?: string, level?: LogLevel, config?: LogConfig) {\r\n    if(name != null)\r\n      this.name = name;\r\n    if(tag != null)\r\n      this.tag = tag;\r\n    if(level != null)\r\n      this.level = level;\r\n    if(config != null)\r\n      this.config = config;\r\n  }\r\n\r\n  /**\r\n   * Get log level\r\n   * @return {LogLevel}\r\n   */\r\n  getLevel(): LogLevel {\r\n    return this.level;\r\n  };\r\n\r\n  /**\r\n   * Set log level\r\n   * @param {LogLevel} level - the log level\r\n   */\r\n  setLevel(level: LogLevel): void {\r\n    this.level = level;\r\n  };\r\n\r\n  // ==========================================================================\r\n  // Helpers\r\n  // ==========================================================================\r\n\r\n  private static pad(n) {\r\n    return (n!=null && n<10 ? \"0\"+n : n);\r\n  }\r\n\r\n  private static getParsedDate(date: Date, separator?: string) {\r\n    const s = (separator? separator : \"\");\r\n    return \"\"+date.getFullYear()+s+Logger.pad(date.getMonth()+1)+s+Logger.pad(date.getDate());\r\n  }\r\n\r\n  private static getParsedTime(date: Date, milliseconds?: boolean, separator?: string) {\r\n    const s = (separator ? separator : \"\");\r\n    return \"\"+Logger.pad(date.getHours())+s+Logger.pad(date.getMinutes())+s+Logger.pad(date.getSeconds())+(milliseconds ? s+date.getMilliseconds(): '');\r\n  }\r\n\r\n  private static log(level: LogLevel, levelMax: LogLevel, name: string, tag: string, config: LogConfig, args: string[], printStack?: boolean) {\r\n    if(!Array.isArray(args))\r\n      args = [args];\r\n\r\n    // check if level of message is inferior or equal to the current log level\r\n    if(level <= levelMax) {\r\n      let argsOut = [];\r\n\r\n      let dateTime = \"\";\r\n      if(config.printDate)\r\n        dateTime += Logger.getParsedDate(new Date());\r\n      if(config.printTime)\r\n        dateTime += Logger.getParsedTime(new Date(), config.printMilliTime);\r\n      if(dateTime !== \"\")\r\n        argsOut.push(\"[\"+dateTime+\"]\");\r\n      if(config.printName && name)\r\n        argsOut.push(\"(\"+name+\")\");\r\n      if(config.printLevel)\r\n        argsOut.push(\"<\"+Logger.levels[level]+\">\");\r\n      if(config.printTag && tag)\r\n        argsOut.push(\"(\"+tag+\")\");\r\n\r\n      argsOut = argsOut.concat(args);\r\n\r\n      if(printStack) {\r\n        const err = new Error();\r\n        let s = err.stack;\r\n        for(let i=0; i<3; i++) {\r\n          s = s.substring(s.indexOf('\\n')+1);\r\n        }\r\n        argsOut.push(\"\\n\"+s);\r\n      }\r\n\r\n      console[Logger.consoles[level]].apply(console, argsOut);\r\n    }\r\n  }\r\n\r\n  // ==========================================================================\r\n  // Methods\r\n  // ==========================================================================\r\n\r\n  /**\r\n   * Log with message level\r\n   * @param {...string} args\r\n   */\r\n  m(args): void {\r\n    Logger.log(LogLevel.MESSAGE, this.level, this.name, this.tag, this.config, Array.prototype.slice.call(arguments));\r\n  }\r\n  /**\r\n   * Log with error level\r\n   * @param {...string} args\r\n   */\r\n  e(args): void {\r\n    Logger.log(LogLevel.ERROR, this.level, this.name, this.tag, this.config, Array.prototype.slice.call(arguments));\r\n  }\r\n  /**\r\n   * Log with warning level\r\n   * @param {...string} args\r\n   */\r\n  w(args): void {\r\n    Logger.log(LogLevel.WARNING, this.level, this.name, this.tag, this.config, Array.prototype.slice.call(arguments));\r\n  }\r\n  /**\r\n   * Log with info level\r\n   * @param {...string} args\r\n   */\r\n  i(args): void {\r\n    Logger.log(LogLevel.INFO, this.level, this.name, this.tag, this.config, Array.prototype.slice.call(arguments));\r\n  }\r\n  /**\r\n   * Log with debug level\r\n   * @param {...string} args\r\n   */\r\n  d(args): void {\r\n    Logger.log(LogLevel.DEBUG, this.level, this.name, this.tag, this.config, Array.prototype.slice.call(arguments));\r\n  }\r\n  /**\r\n   * Log with verbose level\r\n   * @param {...string} args\r\n   */\r\n  v(args): void {\r\n    Logger.log(LogLevel.VERBOSE, this.level, this.name, this.tag, this.config, Array.prototype.slice.call(arguments));\r\n  }\r\n\r\n  /**\r\n   * Log with message level and callstack\r\n   * @param {...string} args\r\n   */\r\n  mS(args): void {\r\n    Logger.log(LogLevel.MESSAGE, this.level, this.name, this.tag, this.config, Array.prototype.slice.call(arguments), true);\r\n  }\r\n  /**\r\n   * Log with error level and callstack\r\n   * @param {...string} args\r\n   */\r\n  eS(args): void {\r\n    Logger.log(LogLevel.ERROR, this.level, this.name, this.tag, this.config, Array.prototype.slice.call(arguments), true);\r\n  }\r\n  /**\r\n   * Log with warning level and callstack\r\n   * @param {...string} args\r\n   */\r\n  wS(args): void {\r\n    Logger.log(LogLevel.WARNING, this.level, this.name, this.tag, this.config, Array.prototype.slice.call(arguments), true);\r\n  }\r\n  /**\r\n   * Log with info level and callstack\r\n   * @param {...string} args\r\n   */\r\n  iS(args): void {\r\n    Logger.log(LogLevel.INFO, this.level, this.name, this.tag, this.config, Array.prototype.slice.call(arguments), true);\r\n  }\r\n  /**\r\n   * Log with debug level and callstack\r\n   * @param {...string} args\r\n   */\r\n  dS(args): void {\r\n    Logger.log(LogLevel.DEBUG, this.level, this.name, this.tag, this.config, Array.prototype.slice.call(arguments), true);\r\n  }\r\n  /**\r\n   * Log with verbose level and callstack\r\n   * @param {...string} args\r\n   */\r\n  vS(args): void {\r\n    Logger.log(LogLevel.VERBOSE, this.level, this.name, this.tag, this.config, Array.prototype.slice.call(arguments), true);\r\n  }\r\n  /**\r\n   * Log raw message (equivalent to console.log)\r\n   * @param {...string} args\r\n   */\r\n  raw(args): void {\r\n    console.log.apply(console, Array.prototype.slice.call(arguments));\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\r\nexport { LogManager } from './LogManager';\r\nexport { Logger } from './Logger';\r\nexport { LogConfig } from './LogConfig';\r\nexport { LogLevel } from './LogLevel';\r\n"],"names":[],"sourceRoot":""}